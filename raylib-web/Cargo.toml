[package]
name = "weblib"
version = "0.1.0"
authors = ["Andy Fiedler <andy@andyfiedler.com>"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook", "wee_alloc"]

[dependencies]
wasm-bindgen = { version = "0.2.63", features = ["nightly"] }

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }

raylib = { path = "../raylib" }
wasm_thread = { version = "0.2.0", features = ["es_modules"] }
log = "0.4.6"
wasm-logger = "0.2.0"
lazy_static = "1.4.0"
getrandom = { version = "0.2", features = ["js"] }
js-sys = "0.3"
web-sys = { version = "0.3", features = ["Blob", "DedicatedWorkerGlobalScope", "MessageEvent", "Url", "Worker", "WorkerType", "WorkerOptions"]}
async-channel = "1.6"
wasm-bindgen-futures = "0.4"

[dev-dependencies]
wasm-bindgen-test = "0.3.13"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
